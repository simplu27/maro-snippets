# Credit:
# http://www.inmotionhosting.com/support/website/redirects/setting-up-a-301-permanent-redirect-via-htaccess#old-domain-to-new

#######################################################

# Redirect individual files
# To redirect individual files, like example.com/oldfile.htm to newfile.htm
# you can use a 301 redirect like this:

Redirect 301 /oldfile.htm /newfile.htm

# To redirect one specific file to another domain such as example.com/oldfile.htm to example.net/newfile.htm:

Redirect 301 /oldfile.htm http://example.net/newfile.htm

#######################################################

# Redirect an old domain to a new domain
# If you had an old domain such as example.com, and now you decided you actually want to use example.net for the website. You could setup a 301 redirect for the entire domain, so that old links to example.com carry over.

# Code in the example.com domain's .htaccess file:

RewriteEngine on
RewriteCond %{HTTP_HOST} ^example.com [NC,OR]
RewriteCond %{HTTP_HOST} ^www.example.com [NC]
RewriteRule ^(.*)$ http://example.net/$1 [L,R=301,NC]

#######################################################

# Force www. version of domain to be used

# A search engine like Google would see example.com and www.example.com as essentially two separate websites. They recommend you pick one version you'd like search engines to display and using a 301 redirect is a possible option.

# If you have a lot of links on the web where people are linking to your site as example.com, but you would like your visitors to instead end up at www.example.com you can force this version of your domain with these rules:

RewriteEngine on
RewriteCond %{HTTP_HOST} ^example.com [NC]
RewriteRule ^(.*)$ http://www.example.com/$1 [L,R=301,NC]

#######################################################

# Force non www. version of domain to be used

# If you have a lot of links on the web where people are linking to your site as www.example.com, but you would like your visitors to instead end up at example.com you can force this version of your domain with these rules:

RewriteEngine on
RewriteCond %{HTTP_HOST} ^www.example.com [NC]
RewriteRule ^(.*)$ http://example.com/$1 [L,R=301,NC]

#######################################################

# Redirect all files with certain extension

# To re-direct all of one type of file to another, such as example.com/file.php to example.com/file.htm

RewriteEngine On
RewriteCond %{REQUEST_URI} .php$
RewriteRule ^(.*).php$ /$1.htm [R=301,L]

#######################################################
#######################################################
#######################################################

# https://my.bluehost.com/cgi/help/htaccess_redirect

# Create a 301 redirect for all http requests that are going to the old domain.

# Example 1 - Redirect from oldexample.com to www.newexample.com:

RewriteEngine On

RewriteCond %{HTTP_HOST} !oldexample.com$ [NC]
RewriteRule ^(.*)$ http://www.newexample.com/$1 [L,R=301]

# This is useful when you use www.newexample.com as your new domain name (see also this article about redirecting www and non-www domains). If not - use the code of example 2.

# Example 2 - Redirect from oldexample.com to newexample.com:

RewriteEngine On

RewriteBase /
RewriteCond %{HTTP_HOST} !oldexample.com$ [NC]
RewriteRule ^(.*)$ http://newexample.com/$1 [L,R=301]

#######################################################

# 2017

# Redirect non-www and non-https to https://www.example.com

# RewriteEngine must be on and just one time in page
RewriteEngine on

# https://www.siteground.com/kb/how_to_redirect_nonwww_urls_to_www/
RewriteCond %{HTTPS} off [OR]
RewriteCond %{HTTP_HOST} !^www\. [NC]
RewriteRule ^(.*)$ https://www.example.com/$1 [L,R=301]	

#######################################################